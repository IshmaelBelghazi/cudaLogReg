% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/generics.R
\name{get_cost}
\alias{get_cost}
\alias{get_cost.model.spec}
\title{Computes model cost}
\usage{
get_cost(object, feats, targets, decay = NULL, backend = "R", ...)

\method{get_cost}{model.spec}(object, feats, targets, decay = NULL,
  backend = "R", ...)
}
\arguments{
\item{object}{Linear classifier specification object.}

\item{feats}{Numeric Matrix of features. Follows the usual convention of having
one example per row. For a model with M features and dataset with N
examples the matrix should be N \eqn{\times} K}

\item{targets}{Numeric matrix of one hot encoded target. Follows the usual
convention of having one target per row. For a model with K classes and a
dataset with N examples the matrix should be N \eqn{\times} K}

\item{decay}{Numeric scalar. Tikhonov regularization coefficient (weight decay). Should be
a non-negative real number.}

\item{backend}{Computation back-end ('R', 'C', or 'CUDA')}

\item{...}{other arguments passed to specific methods}
}
\value{
cost Numeric scalar. model cost
}
\description{
Computes model cost
}
\section{Methods (by class)}{
\itemize{
\item \code{model.spec}: Computers model cost for linear classification
specification objects
}}
\examples{
# Generate random initial weights
w_init <- matrix(rnorm(784 * 10), 784, 10)
# construct model
linear_classifier <- Classifier(weights_init=w_init)
# Fetch training variables
feats <- mini_mnist$train$images
targets <- mini_mnist$train$labels
# Set decay coefficient
decay <- 0.01
# compute cost of the training set using the three back-ends
cost_R <- get_cost(linear_classifier, feats, targets, decay, 'R')
cost_C <- get_cost(linear_classifier, feats, targets, decay, 'C')
cost_CUDA <- get_cost(linear_classifier, feats, targets, decay, 'CUDA')
}
\author{
Mohamed Ishmael Diwan Belghazi
}

